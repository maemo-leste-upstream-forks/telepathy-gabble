<refentry id="WockyRoster">
<refmeta>
<refentrytitle role="top_of_page" id="WockyRoster.top_of_page">WockyRoster</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>WOCKY Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>WockyRoster</refname>
<refpurpose>TODO</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="WockyRoster.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="GQuark">GQuark</link>              <link linkend="wocky-roster-error-quark">wocky_roster_error_quark</link>            (void);
                    <link linkend="WockyRoster-struct">WockyRoster</link>;
                    <link linkend="WockyRosterClass">WockyRosterClass</link>;
enum                <link linkend="WockyRosterSubscriptionFlags">WockyRosterSubscriptionFlags</link>;
enum                <link linkend="WockyRosterError">WockyRosterError</link>;
#define             <link linkend="WOCKY-ROSTER-ERROR:CAPS">WOCKY_ROSTER_ERROR</link>
<link linkend="WockyRoster">WockyRoster</link>*        <link linkend="wocky-roster-new">wocky_roster_new</link>                    (<link linkend="WockySession">WockySession</link> *session);
<link linkend="void">void</link>                <link linkend="wocky-roster-fetch-roster-async">wocky_roster_fetch_roster_async</link>     (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="wocky-roster-fetch-roster-finish">wocky_roster_fetch_roster_finish</link>    (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="WockyBareContact">WockyBareContact</link>*   <link linkend="wocky-roster-get-contact">wocky_roster_get_contact</link>            (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         const <link linkend="gchar">gchar</link> *jid);
<link linkend="GSList">GSList</link>*             <link linkend="wocky-roster-get-all-contacts">wocky_roster_get_all_contacts</link>       (<link linkend="WockyRoster">WockyRoster</link> *self);
<link linkend="void">void</link>                <link linkend="wocky-roster-add-contact-async">wocky_roster_add_contact_async</link>      (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         const <link linkend="gchar">gchar</link> *jid,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> * const *groups,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="wocky-roster-add-contact-finish">wocky_roster_add_contact_finish</link>     (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="wocky-roster-change-contact-name-async">wocky_roster_change_contact_name_async</link>
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="wocky-roster-change-contact-name-finish">wocky_roster_change_contact_name_finish</link>
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="wocky-roster-contact-add-group-async">wocky_roster_contact_add_group_async</link>
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="wocky-roster-contact-add-group-finish">wocky_roster_contact_add_group_finish</link>
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="wocky-roster-contact-remove-group-async">wocky_roster_contact_remove_group_async</link>
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="wocky-roster-contact-remove-group-finish">wocky_roster_contact_remove_group_finish</link>
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="wocky-roster-remove-contact-async">wocky_roster_remove_contact_async</link>   (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="wocky-roster-remove-contact-finish">wocky_roster_remove_contact_finish</link>  (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="gchar">gchar</link>*        <link linkend="wocky-roster-subscription-to-string">wocky_roster_subscription_to_string</link> (<link linkend="WockyRosterSubscriptionFlags">WockyRosterSubscriptionFlags</link> subscription);
</synopsis>
</refsynopsisdiv>

<refsect1 id="WockyRoster.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----WockyRoster
</synopsis>

</refsect1>





<refsect1 id="WockyRoster.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="WockyRoster--session">session</link>&quot;                  <link linkend="WockySession">WockySession</link>*         : Read / Write / Construct Only
</synopsis>
</refsect1>

<refsect1 id="WockyRoster.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="WockyRoster-added">added</link>&quot;                                          : Run Last
  &quot;<link linkend="WockyRoster-removed">removed</link>&quot;                                        : Run Last
</synopsis>
</refsect1>


<refsect1 id="WockyRoster.description" role="desc">
<title role="desc.title">Description</title>
<para>
TODO</para>
<para>

</para>
</refsect1>

<refsect1 id="WockyRoster.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="wocky-roster-error-quark" role="function">
<title>wocky_roster_error_quark ()</title>
<indexterm zone="wocky-roster-error-quark"><primary>wocky_roster_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              wocky_roster_error_quark            (void);</programlisting>
<para>
Get the error quark used by the roster.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the quark for roster errors.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="WockyRoster-struct" role="struct">
<title>WockyRoster</title>
<indexterm zone="WockyRoster-struct"><primary>WockyRoster</primary></indexterm><programlisting>typedef struct _WockyRoster WockyRoster;</programlisting>
<para>

</para></refsect2>
<refsect2 id="WockyRosterClass" role="struct">
<title>WockyRosterClass</title>
<indexterm zone="WockyRosterClass"><primary>WockyRosterClass</primary></indexterm><programlisting>typedef struct {
  GObjectClass parent_class;
} WockyRosterClass;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="WockyRosterSubscriptionFlags" role="enum">
<title>enum WockyRosterSubscriptionFlags</title>
<indexterm zone="WockyRosterSubscriptionFlags"><primary>WockyRosterSubscriptionFlags</primary></indexterm><programlisting>typedef enum
{
  WOCKY_ROSTER_SUBSCRIPTION_TYPE_NONE = 0,
  WOCKY_ROSTER_SUBSCRIPTION_TYPE_TO   = 1 &lt;&lt; 0,
  WOCKY_ROSTER_SUBSCRIPTION_TYPE_FROM = 1 &lt;&lt; 1,
  WOCKY_ROSTER_SUBSCRIPTION_TYPE_BOTH =
    WOCKY_ROSTER_SUBSCRIPTION_TYPE_TO | WOCKY_ROSTER_SUBSCRIPTION_TYPE_FROM,
  LAST_WOCKY_ROSTER_SUBSCRIPTION_TYPE = WOCKY_ROSTER_SUBSCRIPTION_TYPE_BOTH
} WockyRosterSubscriptionFlags;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="WockyRosterError" role="enum">
<title>enum WockyRosterError</title>
<indexterm zone="WockyRosterError"><primary>WockyRosterError</primary></indexterm><programlisting>typedef enum {
  WOCKY_ROSTER_ERROR_INVALID_STANZA,
  WOCKY_ROSTER_ERROR_NOT_IN_ROSTER,
} WockyRosterError;
</programlisting>
<para>
The <link linkend="WockyRosterError"><type>WockyRosterError</type></link> specific errors.</para>
<para>

</para><variablelist role="enum">
<varlistentry id="WOCKY-ROSTER-ERROR-INVALID-STANZA:CAPS" role="constant">
<term><literal>WOCKY_ROSTER_ERROR_INVALID_STANZA</literal></term>
<listitem><simpara> received an invalid roster stanza
from the server
</simpara></listitem>
</varlistentry>
<varlistentry id="WOCKY-ROSTER-ERROR-NOT-IN-ROSTER:CAPS" role="constant">
<term><literal>WOCKY_ROSTER_ERROR_NOT_IN_ROSTER</literal></term>
<listitem><simpara> the contact is not in the roster
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="WOCKY-ROSTER-ERROR:CAPS" role="macro">
<title>WOCKY_ROSTER_ERROR</title>
<indexterm zone="WOCKY-ROSTER-ERROR:CAPS"><primary>WOCKY_ROSTER_ERROR</primary></indexterm><programlisting>#define WOCKY_ROSTER_ERROR (wocky_roster_error_quark ())
</programlisting>
<para>
Get access to the error quark of the roster.</para>
<para>

</para></refsect2>
<refsect2 id="wocky-roster-new" role="function">
<title>wocky_roster_new ()</title>
<indexterm zone="wocky-roster-new"><primary>wocky_roster_new</primary></indexterm><programlisting><link linkend="WockyRoster">WockyRoster</link>*        wocky_roster_new                    (<link linkend="WockySession">WockySession</link> *session);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-fetch-roster-async" role="function">
<title>wocky_roster_fetch_roster_async ()</title>
<indexterm zone="wocky-roster-fetch-roster-async"><primary>wocky_roster_fetch_roster_async</primary></indexterm><programlisting><link linkend="void">void</link>                wocky_roster_fetch_roster_async     (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-fetch-roster-finish" role="function">
<title>wocky_roster_fetch_roster_finish ()</title>
<indexterm zone="wocky-roster-fetch-roster-finish"><primary>wocky_roster_fetch_roster_finish</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            wocky_roster_fetch_roster_finish    (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-get-contact" role="function">
<title>wocky_roster_get_contact ()</title>
<indexterm zone="wocky-roster-get-contact"><primary>wocky_roster_get_contact</primary></indexterm><programlisting><link linkend="WockyBareContact">WockyBareContact</link>*   wocky_roster_get_contact            (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         const <link linkend="gchar">gchar</link> *jid);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>jid</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-get-all-contacts" role="function">
<title>wocky_roster_get_all_contacts ()</title>
<indexterm zone="wocky-roster-get-all-contacts"><primary>wocky_roster_get_all_contacts</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*             wocky_roster_get_all_contacts       (<link linkend="WockyRoster">WockyRoster</link> *self);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-add-contact-async" role="function">
<title>wocky_roster_add_contact_async ()</title>
<indexterm zone="wocky-roster-add-contact-async"><primary>wocky_roster_add_contact_async</primary></indexterm><programlisting><link linkend="void">void</link>                wocky_roster_add_contact_async      (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         const <link linkend="gchar">gchar</link> *jid,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> * const *groups,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>jid</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>groups</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-add-contact-finish" role="function">
<title>wocky_roster_add_contact_finish ()</title>
<indexterm zone="wocky-roster-add-contact-finish"><primary>wocky_roster_add_contact_finish</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            wocky_roster_add_contact_finish     (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-change-contact-name-async" role="function">
<title>wocky_roster_change_contact_name_async ()</title>
<indexterm zone="wocky-roster-change-contact-name-async"><primary>wocky_roster_change_contact_name_async</primary></indexterm><programlisting><link linkend="void">void</link>                wocky_roster_change_contact_name_async
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-change-contact-name-finish" role="function">
<title>wocky_roster_change_contact_name_finish ()</title>
<indexterm zone="wocky-roster-change-contact-name-finish"><primary>wocky_roster_change_contact_name_finish</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            wocky_roster_change_contact_name_finish
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-contact-add-group-async" role="function">
<title>wocky_roster_contact_add_group_async ()</title>
<indexterm zone="wocky-roster-contact-add-group-async"><primary>wocky_roster_contact_add_group_async</primary></indexterm><programlisting><link linkend="void">void</link>                wocky_roster_contact_add_group_async
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-contact-add-group-finish" role="function">
<title>wocky_roster_contact_add_group_finish ()</title>
<indexterm zone="wocky-roster-contact-add-group-finish"><primary>wocky_roster_contact_add_group_finish</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            wocky_roster_contact_add_group_finish
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-contact-remove-group-async" role="function">
<title>wocky_roster_contact_remove_group_async ()</title>
<indexterm zone="wocky-roster-contact-remove-group-async"><primary>wocky_roster_contact_remove_group_async</primary></indexterm><programlisting><link linkend="void">void</link>                wocky_roster_contact_remove_group_async
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-contact-remove-group-finish" role="function">
<title>wocky_roster_contact_remove_group_finish ()</title>
<indexterm zone="wocky-roster-contact-remove-group-finish"><primary>wocky_roster_contact_remove_group_finish</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            wocky_roster_contact_remove_group_finish
                                                        (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-remove-contact-async" role="function">
<title>wocky_roster_remove_contact_async ()</title>
<indexterm zone="wocky-roster-remove-contact-async"><primary>wocky_roster_remove_contact_async</primary></indexterm><programlisting><link linkend="void">void</link>                wocky_roster_remove_contact_async   (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="WockyBareContact">WockyBareContact</link> *contact,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-remove-contact-finish" role="function">
<title>wocky_roster_remove_contact_finish ()</title>
<indexterm zone="wocky-roster-remove-contact-finish"><primary>wocky_roster_remove_contact_finish</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            wocky_roster_remove_contact_finish  (<link linkend="WockyRoster">WockyRoster</link> *self,
                                                         <link linkend="GAsyncResult">GAsyncResult</link> *result,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-roster-subscription-to-string" role="function">
<title>wocky_roster_subscription_to_string ()</title>
<indexterm zone="wocky-roster-subscription-to-string"><primary>wocky_roster_subscription_to_string</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        wocky_roster_subscription_to_string (<link linkend="WockyRosterSubscriptionFlags">WockyRosterSubscriptionFlags</link> subscription);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>subscription</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="WockyRoster.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="WockyRoster--session"><title>The <literal>&quot;session&quot;</literal> property</title>
<indexterm zone="WockyRoster--session"><primary>WockyRoster:session</primary></indexterm><programlisting>  &quot;session&quot;                  <link linkend="WockySession">WockySession</link>*         : Read / Write / Construct Only</programlisting>
<para>the wocky session used by this roster.</para></refsect2>

</refsect1>

<refsect1 id="WockyRoster.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="WockyRoster-added"><title>The <literal>&quot;added&quot;</literal> signal</title>
<indexterm zone="WockyRoster-added"><primary>WockyRoster::added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="WockyRoster">WockyRoster</link> *wockyroster,
                                                        <link linkend="GObject">GObject</link>     *arg1,
                                                        <link linkend="gpointer">gpointer</link>     user_data)        : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wockyroster</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="WockyRoster-removed"><title>The <literal>&quot;removed&quot;</literal> signal</title>
<indexterm zone="WockyRoster-removed"><primary>WockyRoster::removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="WockyRoster">WockyRoster</link> *wockyroster,
                                                        <link linkend="GObject">GObject</link>     *arg1,
                                                        <link linkend="gpointer">gpointer</link>     user_data)        : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wockyroster</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
