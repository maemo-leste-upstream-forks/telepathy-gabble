<refentry id="wocky-wocky-xmpp-error">
<refmeta>
<refentrytitle role="top_of_page" id="wocky-wocky-xmpp-error.top_of_page">wocky-xmpp-error</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>WOCKY Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>wocky-xmpp-error</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="wocky-wocky-xmpp-error.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
enum                <link linkend="WockyXmppError">WockyXmppError</link>;
<link linkend="GQuark">GQuark</link>              <link linkend="wocky-xmpp-error-quark">wocky_xmpp_error_quark</link>              (void);
#define             <link linkend="WOCKY-XMPP-ERROR--CAPS">WOCKY_XMPP_ERROR</link>
enum                <link linkend="WockyXmppStreamError">WockyXmppStreamError</link>;
<link linkend="GQuark">GQuark</link>              <link linkend="wocky-xmpp-stream-error-quark">wocky_xmpp_stream_error_quark</link>       (void);
#define             <link linkend="WOCKY-XMPP-STREAM-ERROR--CAPS">WOCKY_XMPP_STREAM_ERROR</link>
<link linkend="WockyXmppError">WockyXmppError</link>      <link linkend="wocky-xmpp-error-from-node">wocky_xmpp_error_from_node</link>          (<link linkend="WockyXmppNode">WockyXmppNode</link> *error_node);
<link linkend="WockyXmppNode">WockyXmppNode</link> *     <link linkend="wocky-xmpp-error-to-node">wocky_xmpp_error_to_node</link>            (<link linkend="WockyXmppError">WockyXmppError</link> error,
                                                         <link linkend="WockyXmppNode">WockyXmppNode</link> *parent_node,
                                                         const <link linkend="gchar">gchar</link> *errmsg);
const <link linkend="gchar">gchar</link> *       <link linkend="wocky-xmpp-error-string">wocky_xmpp_error_string</link>             (<link linkend="WockyXmppError">WockyXmppError</link> error);
const <link linkend="gchar">gchar</link> *       <link linkend="wocky-xmpp-error-description">wocky_xmpp_error_description</link>        (<link linkend="WockyXmppError">WockyXmppError</link> error);
<link linkend="WockyXmppStreamError">WockyXmppStreamError</link>  <link linkend="wocky-xmpp-stream-error-from-node">wocky_xmpp_stream_error_from_node</link> (<link linkend="WockyXmppNode">WockyXmppNode</link> *node);
</synopsis>
</refsynopsisdiv>









<refsect1 id="wocky-wocky-xmpp-error.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="wocky-wocky-xmpp-error.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="WockyXmppError" role="enum">
<title>enum WockyXmppError</title>
<indexterm zone="WockyXmppError"><primary sortas="WockyXmppError">WockyXmppError</primary></indexterm><programlisting>typedef enum {
    WOCKY_XMPP_ERROR_UNDEFINED_CONDITION = 0, /* 500 */

    WOCKY_XMPP_ERROR_REDIRECT,                /* 302 */
    WOCKY_XMPP_ERROR_GONE,                    /* 302 */

    WOCKY_XMPP_ERROR_BAD_REQUEST,             /* 400 */
    WOCKY_XMPP_ERROR_UNEXPECTED_REQUEST,      /* 400 */
    WOCKY_XMPP_ERROR_JID_MALFORMED,           /* 400 */

    WOCKY_XMPP_ERROR_NOT_AUTHORIZED,          /* 401 */

    WOCKY_XMPP_ERROR_PAYMENT_REQUIRED,        /* 402 */

    WOCKY_XMPP_ERROR_FORBIDDEN,               /* 403 */

    WOCKY_XMPP_ERROR_ITEM_NOT_FOUND,          /* 404 */
    WOCKY_XMPP_ERROR_RECIPIENT_UNAVAILABLE,   /* 404 */
    WOCKY_XMPP_ERROR_REMOTE_SERVER_NOT_FOUND, /* 404 */

    WOCKY_XMPP_ERROR_NOT_ALLOWED,             /* 405 */

    WOCKY_XMPP_ERROR_NOT_ACCEPTABLE,          /* 406 */

    WOCKY_XMPP_ERROR_REGISTRATION_REQUIRED,   /* 407 */
    WOCKY_XMPP_ERROR_SUBSCRIPTION_REQUIRED,   /* 407 */

    WOCKY_XMPP_ERROR_REMOTE_SERVER_TIMEOUT,   /* 408, 504 */

    WOCKY_XMPP_ERROR_CONFLICT,                /* 409 */

    WOCKY_XMPP_ERROR_INTERNAL_SERVER_ERROR,   /* 500 */
    WOCKY_XMPP_ERROR_RESOURCE_CONSTRAINT,     /* 500 */

    WOCKY_XMPP_ERROR_FEATURE_NOT_IMPLEMENTED, /* 501 */

    WOCKY_XMPP_ERROR_SERVICE_UNAVAILABLE,     /* 502, 503, 510 */

    WOCKY_XMPP_ERROR_JINGLE_OUT_OF_ORDER,
    WOCKY_XMPP_ERROR_JINGLE_UNKNOWN_SESSION,
    WOCKY_XMPP_ERROR_JINGLE_UNSUPPORTED_CONTENT,
    WOCKY_XMPP_ERROR_JINGLE_UNSUPPORTED_TRANSPORT,

    WOCKY_XMPP_ERROR_SI_NO_VALID_STREAMS,
    WOCKY_XMPP_ERROR_SI_BAD_PROFILE,

    NUM_WOCKY_XMPP_ERRORS,
} WockyXmppError;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="wocky-xmpp-error-quark" role="function">
<title>wocky_xmpp_error_quark ()</title>
<indexterm zone="wocky-xmpp-error-quark"><primary sortas="wocky_xmpp_error_quark">wocky_xmpp_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              wocky_xmpp_error_quark              (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="WOCKY-XMPP-ERROR--CAPS" role="macro">
<title>WOCKY_XMPP_ERROR</title>
<indexterm zone="WOCKY-XMPP-ERROR--CAPS"><primary sortas="WOCKY_XMPP_ERROR">WOCKY_XMPP_ERROR</primary></indexterm><programlisting>#define WOCKY_XMPP_ERROR (wocky_xmpp_error_quark ())
</programlisting>
<para>
</para></refsect2>
<refsect2 id="WockyXmppStreamError" role="enum">
<title>enum WockyXmppStreamError</title>
<indexterm zone="WockyXmppStreamError"><primary sortas="WockyXmppStreamError">WockyXmppStreamError</primary></indexterm><programlisting>typedef enum {
  WOCKY_XMPP_STREAM_ERROR_BAD_FORMAT,
  WOCKY_XMPP_STREAM_ERROR_BAD_NAMESPACE_PREFIX,
  WOCKY_XMPP_STREAM_ERROR_CONFLICT,
  WOCKY_XMPP_STREAM_ERROR_CONNECTION_TIMEOUT,
  WOCKY_XMPP_STREAM_ERROR_HOST_GONE,
  WOCKY_XMPP_STREAM_ERROR_HOST_UNKNOWN,
  WOCKY_XMPP_STREAM_ERROR_IMPROPER_ADDRESSING,
  WOCKY_XMPP_STREAM_ERROR_INTERNAL_SERVER_ERROR,
  WOCKY_XMPP_STREAM_ERROR_INVALID_FROM,
  WOCKY_XMPP_STREAM_ERROR_INVALID_ID,
  WOCKY_XMPP_STREAM_ERROR_INVALID_NAMESPACE,
  WOCKY_XMPP_STREAM_ERROR_INVALID_XML,
  WOCKY_XMPP_STREAM_ERROR_NOT_AUTHORIZED,
  WOCKY_XMPP_STREAM_ERROR_POLICY_VIOLATION,
  WOCKY_XMPP_STREAM_ERROR_REMOTE_CONNECTION_FAILED,
  WOCKY_XMPP_STREAM_ERROR_RESOURCE_CONSTRAINT,
  WOCKY_XMPP_STREAM_ERROR_RESTRICTED_XML,
  WOCKY_XMPP_STREAM_ERROR_SEE_OTHER_HOST,
  WOCKY_XMPP_STREAM_ERROR_SYSTEM_SHUTDOWN,
  WOCKY_XMPP_STREAM_ERROR_UNDEFINED_CONDITION,
  WOCKY_XMPP_STREAM_ERROR_UNSUPPORTED_ENCODING,
  WOCKY_XMPP_STREAM_ERROR_UNSUPPORTED_STANZA_TYPE,
  WOCKY_XMPP_STREAM_ERROR_UNSUPPORTED_VERSION,
  WOCKY_XMPP_STREAM_ERROR_XML_NOT_WELL_FORMED,
  WOCKY_XMPP_STREAM_ERROR_UNKNOWN,
} WockyXmppStreamError;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="wocky-xmpp-stream-error-quark" role="function">
<title>wocky_xmpp_stream_error_quark ()</title>
<indexterm zone="wocky-xmpp-stream-error-quark"><primary sortas="wocky_xmpp_stream_error_quark">wocky_xmpp_stream_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              wocky_xmpp_stream_error_quark       (void);</programlisting>
<para>
Get the error quark used for stream errors</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the quark for stream errors.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="WOCKY-XMPP-STREAM-ERROR--CAPS" role="macro">
<title>WOCKY_XMPP_STREAM_ERROR</title>
<indexterm zone="WOCKY-XMPP-STREAM-ERROR--CAPS"><primary sortas="WOCKY_XMPP_STREAM_ERROR">WOCKY_XMPP_STREAM_ERROR</primary></indexterm><programlisting>#define WOCKY_XMPP_STREAM_ERROR (wocky_xmpp_stream_error_quark ())
</programlisting>
<para>
Get access to the error quark of the xmpp stream errors.</para>
<para>
</para></refsect2>
<refsect2 id="wocky-xmpp-error-from-node" role="function">
<title>wocky_xmpp_error_from_node ()</title>
<indexterm zone="wocky-xmpp-error-from-node"><primary sortas="wocky_xmpp_error_from_node">wocky_xmpp_error_from_node</primary></indexterm><programlisting><link linkend="WockyXmppError">WockyXmppError</link>      wocky_xmpp_error_from_node          (<link linkend="WockyXmppNode">WockyXmppNode</link> *error_node);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error_node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-xmpp-error-to-node" role="function">
<title>wocky_xmpp_error_to_node ()</title>
<indexterm zone="wocky-xmpp-error-to-node"><primary sortas="wocky_xmpp_error_to_node">wocky_xmpp_error_to_node</primary></indexterm><programlisting><link linkend="WockyXmppNode">WockyXmppNode</link> *     wocky_xmpp_error_to_node            (<link linkend="WockyXmppError">WockyXmppError</link> error,
                                                         <link linkend="WockyXmppNode">WockyXmppNode</link> *parent_node,
                                                         const <link linkend="gchar">gchar</link> *errmsg);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent_node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errmsg</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-xmpp-error-string" role="function">
<title>wocky_xmpp_error_string ()</title>
<indexterm zone="wocky-xmpp-error-string"><primary sortas="wocky_xmpp_error_string">wocky_xmpp_error_string</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       wocky_xmpp_error_string             (<link linkend="WockyXmppError">WockyXmppError</link> error);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-xmpp-error-description" role="function">
<title>wocky_xmpp_error_description ()</title>
<indexterm zone="wocky-xmpp-error-description"><primary sortas="wocky_xmpp_error_description">wocky_xmpp_error_description</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       wocky_xmpp_error_description        (<link linkend="WockyXmppError">WockyXmppError</link> error);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="wocky-xmpp-stream-error-from-node" role="function">
<title>wocky_xmpp_stream_error_from_node ()</title>
<indexterm zone="wocky-xmpp-stream-error-from-node"><primary sortas="wocky_xmpp_stream_error_from_node">wocky_xmpp_stream_error_from_node</primary></indexterm><programlisting><link linkend="WockyXmppStreamError">WockyXmppStreamError</link>  wocky_xmpp_stream_error_from_node (<link linkend="WockyXmppNode">WockyXmppNode</link> *node);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
